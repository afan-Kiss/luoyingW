apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // 数据库

android {
    compileSdkVersion rootProject.ext.compileVersion
    // 使用 JDK 1.8
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        // 无痛修改包名：https://www.jianshu.com/p/17327e191d2e
        applicationId "com.hjq.demo"
        minSdkVersion 16
        targetSdkVersion rootProject.ext.targetVersion
        versionCode 10
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 仅保留中文语种的资源
        resConfig 'zh'

        // 仅保留 xxhdpi 图片资源（目前主流分辨率 1920 * 1080）
        resConfig 'xxhdpi'

        // 仅保留两种架构的 so 库
        ndk {
            // armeabi：已经淘汰（0%）
            // armeabi-v7a：曾经主流的架构平台（20%）
            // arm64-v8a：目前主流架构平台（80%）
            abiFilters "armeabi-v7a"
        }

        // 开启 Dex 分包
        multiDexEnabled true

        // 混淆配置
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-app.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                // EventBus Apt 索引类生成位置
                arguments = [eventBusIndex: applicationId + '.MyEventBusIndex']
            }
        }
    }
    // APK 签名的那些事：https://www.jianshu.com/p/a1f8e5896aa2
    signingConfigs {
        debug {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
        release {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
    }
    buildTypes {
        release {
            // 移除无用的资源文件
            shrinkResources true
            // ZipAlign 优化
            zipAlignEnabled true
            // 设置混淆
            minifyEnabled true
            // 正式环境签名
            signingConfig signingConfigs.release
            // 正式环境下的 BuglyId
            buildConfigField "String", "BUGLY_ID", "\"请自行替换 Bugly 上面的 AppID\""
        }

        debug {
            // 移除无用的资源文件
            shrinkResources false
            // ZipAlign 优化
            zipAlignEnabled false
            // 设置混淆
            minifyEnabled false
            // 开发环境签名
            signingConfig signingConfigs.debug
            // 开发环境下的 BuglyId
            buildConfigField "String", "BUGLY_ID", "\"请自行替换 Bugly 上面的 AppID\""
        }
    }
    // 默认渠道名
    flavorDimensions "default"
    // 友盟多渠道打包
    productFlavors {
        tencent {}  // 应用宝
        baidu {}    // 百度
        xiaomi {}   // 小米
        huawei {}   // 华为

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
    // JNI 目录
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
//            res.srcDirs = ['res']
        }
    }
    // 执行配置
    applicationVariants.all { variant ->

        // Apk 输出配置
        variant.outputs.all { output ->
            def appName = "AndroidProject"
            if (variant.buildType.name == 'debug') {
                outputFileName = appName + '_v' + versionName + '_' + variant.buildType.name + '.apk'
            } else {
                outputFileName = appName + '_v' + versionName + '_' + new Date().format("yyyyMMdd") + '_' + variant.productFlavors[0].name + '_' + variant.buildType.name + '.apk'
            }
        }

        // AndroidManifest 输出配置
        variant.outputs[0].processManifest.doLast {
            def manifestFile = "${manifestOutputDirectory}/AndroidManifest.xml"
            def updatedContent = new File(manifestFile).getText('UTF-8')
                    .replaceAll("UMENG_APPKEY_VALUE", "5cb16d93570df399fd0014e2") // 友盟 AppKey
                    .replaceAll("QQ_APPID_VALUE", "100424468") // QQ AppId
                    .replaceAll("QQ_APPKEY_VALUE", "c7394704798a158208a74ab60104f0ba") // QQ Key
                    .replaceAll("WX_APPID_VALUE", "wxdc1e388c3822c80b") // 微信 AppId
                    .replaceAll("WX_APPKEY_VALUE", "3baf1193c85774b3fd9d18447d76cab0") // 微信 Key
            new File(manifestFile).write(updatedContent, 'UTF-8')
        }
    }
    greendao {
        schemaVersion 1 //数据库版本号
        daoPackage 'com.hjq.demo.greenDao'//生成greenDao存放三个文件的包名
// 设置DaoMaster、DaoSession、Dao 包名
        targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
        generateTests false //设置为true以自动生成单元测试。
        targetGenDirTests 'src/main/java' //应存储生成的单元测试的基本目录。默认为 src / androidTest / java。
    }
    buildToolsVersion '28.0.3'
}


// api 与 implementation 的区别：https://www.jianshu.com/p/8962d6ba936e
dependencies {

    // 依赖 libs 目录下所有 jar 包
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // 依赖 libs 目录下所有 aar 包
    implementation fileTree(include: ['*.aar'], dir: 'libs')

    // 基础库（不包任何第三方框架）
    implementation project(':base')

    // 自定义 View
    implementation project(':widget')

    // Glide 隔离
    implementation project(':image')

    // 友盟隔离
    implementation project(':umeng')
    implementation project(':IM')

    //键盘
    implementation project(path: ':floatingeditor')

    // 谷歌 Support 包
    implementation "androidx.appcompat:appcompat:$rootProject.ext.appcompatVersion"
    implementation "com.google.android.material:material:$rootProject.ext.materialVersion"

    //     Dex 分包，解决 64k 方法问题
    implementation 'androidx.multidex:multidex:2.0.1'

    // ButterKnife 注解库：https://github.com/JakeWharton/butterknife
    implementation 'com.jakewharton:butterknife:10.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    // EventBus 事件总线：https://github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.1.1'

    // 状态栏沉浸：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'

    // 权限请求框架：https://github.com/getActivity/XXPermissions
    implementation 'com.hjq:xxpermissions:6.0'

    // 标题栏：https://github.com/getActivity/TitleBar
    implementation 'com.hjq:titlebar:6.0'

    // 吐司工具类：https://github.com/getActivity/ToastUtils
    implementation 'com.hjq:toast:8.0'

    // 支持放大缩放的 ImageView：https://github.com/chrisbanes/PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    // ViewPager 指示器：https://github.com/romandanylyk/PageIndicatorView
    implementation 'com.romandanylyk:pageindicatorview:1.0.3'

    // Bugly 异常捕捉：https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20190418140644
    implementation 'com.tencent.bugly:crashreport:3.0.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'

    // 本地异常捕捉框架：https://github.com/Ereza/CustomActivityOnCrash
    implementation 'cat.ereza:customactivityoncrash:2.2.0'

    // 内存泄漏捕捉：https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    //圆角图片
    implementation 'com.github.SheHuan:NiceImageView:1.0.5'

    //Rc
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.35'

    //zbar扫码
    implementation 'cn.bingoogolapple:bga-qrcode-zbar:1.3.6'

    // 侧滑删除
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //数据库
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'
    implementation 'com.nbsp:library:1.8'
    implementation 'org.greenrobot:greendao:3.2.2'

    // TabLayout库   https://github.com/H07000223/FlycoTabLayout
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    //视频
    implementation files('libs/commons-codec-1.8.jar')
    implementation 'com.github.zhaolewei:ZlwAudioRecorder:v1.07'

    //    implementation project(':CallLib')

    //    implementation 'cn.rongcloud.rtclib:rtc_lib:3.1.6'

    //    implementation('cn.rongcloud.rtclib:rtc_lib:3.0.0')
//    implementation project(':CallKit')

    //    api 'cn.rongcloud.sdk:im_kit:2.9.18'

    //im_kit必须依赖im_lib，所以需要加入对应依赖

    //    api 'cn.rongcloud.sdk:im_lib:2.9.18'
//    implementation files('libs/CallEngine_Blink.jar')
//    implementation files('libs/Rong_CallLib.jar')
//    implementation files('libs/RongRTCLib.jar')
//
//    api('cn.rongcloud.sdk:im_kit:2.9.18') {
//        exclude group: 'com.github.bumptech.glide'
//    }
//    api 'cn.rongcloud.sdk:im_lib:2.9.18'


//    implementation('cn.rongcloud.rtclib:rtc_lib:3.1.6')
    //   implementation('io.rong.signalingkit:RongSignalingKit:1.0.0')
    //   implementation('io.rong.signal:RongSignalingLib:3.0.0')


    implementation('cn.rongcloud.sdk:im_kit:2.10.1') {
        exclude group: 'com.github.bumptech.glide'
    }
    implementation('cn.rongcloud.sdk:im_lib:2.10.1')


    api('cn.rongcloud.sdk:call_lib:2.10.1')
            {
                exclude group: 'com.github.bumptech.glide'
            }
//    api 'cn.rongcloud.sdk:call_kit:2.10.1'
    api('cn.rongcloud.sdk:call_kit:2.10.1')
            {
                exclude group: 'com.github.bumptech.glide'
            }


}
